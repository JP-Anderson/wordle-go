Plan for how rest server might look

Create a game:

-- POST /game
  username or id in json body
- creates new game (DONE)
- if active game already exists and is NOT finished (in map, not doing DB for now), return error and the id (PARTIALLY DONE, returns error for any game)
- if finished active game deletes old game
- creates new game for user id (DONE)

-- GET /game/{id}
- loads game for the user id from the active game map (DONE)
- response json{ userId, gameStatus, guesses, answer (if finished) }

-- POST /guess
  json{ userId, guessWord } (DONE)
- find active game for userId (returns error if no active game) (DONE)
- calls Guess() on game (DONE)
- assemble response containing representation of game and past guesses (DONE)
- response json{ userId, gameStatus, guesses, answer (if finished) }


not in scope:
- store old games. when game is finished, we remove it from the map. Future work could include a separate DB for old games
- store active games in DB. games are just stored in an in memory map, which means if the server goes down, games are lost
